1.  % django-admin startproject todolist .

django-admin – это инструмент, при помощи которого можно управлять Django-проектами, в том числе создавать их. 

startproject – команда, которая создает Django-проект. То есть структурированные по папкам питоновские файлы – основа любого Django-проекта. 

todolist – название проекта. 


2. В этой папке у нас есть следующие файлы: 

 • __init__.py – пустой файл, который говорит компьютеру, что папка, в котором данный файл находиться является пакетом питона (пакет – это просто папка, в которой содержаться питоновские файлы и другие папки с питоновскими файлами). Пакет нужен для того, чтобы мы могли в нашем коде импортировать функции из других файлов. Далее будут рассмотрены примеры.

 • settings.py – это модуль (модуль – это питоновский файл, то есть файл с расширением .py. Здесь и далее питоновские файлы будут называться модулями), в котором размещаются все настройки, касающиеся данного проекта. С ними со всеми обязательно познакомимся в будущем. 

• urls.py – это модуль, который отвечает за маршрутизацию запросов. Об этом чуть позже.

• asgi.py, wsgi.py – эти модули нужны для реального размещения нашего сайта в открытом доступе. Они нам понадобятся еще нескоро. 



3. % python manage.py runserver  

4. Теперь давайте подключимся к работающему серверу. Для этого нужно открыть браузер и перейти по ссылке http://127.0.0.1:8000/ или http://localhost:8000/. 

5. Так как наш сайт пока будет совсем не большим мы ограничимся созданием одного приложения. Чтобы создать приложение, нам нужно обратиться к команде startapp модуля manage.py. После этой команды необходимо указать имя создаваемого приложения. Назовем наше приложение core (переводится как ядро, то есть основная часть сайта): 

% python manage.py startapp core



4. Прописываем маршрут импортом - from django.views.generic import TemplateView

Добавляем сайт шаблон
path('',TemplateView.as_view(template_name='index.html'))



5. Если делаем гиперссылку на другую страничку, то неоходимо%:
Ошибка возникает из-за того что наш сервер не умеет обрабатывать адрес 
http://localhost:8000/monday. Сервер может обрабатывать только http://localhost:8000/. 
Как это исправить? Правильно, в модуле urls.py. 
Нам нужно добавить еще один вызов функции path в список маршрутов urlpatterns:  
 path()



